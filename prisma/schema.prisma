// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Department {
  id    Int    @id @default(autoincrement())
  name  String
  users User[]
}

model Role {
  id   Int    @id @default(autoincrement())
  name String
  User User[]
}

model Organization {
  id         Int          @id @default(autoincrement())
  name       String
  address    String
  Users      User[]
  Invitation Invitation[]
  createdAt  DateTime     @default(now())
}

// name, dob, gender, email, image, about, city, country, state, strrretAddress, organizationId, password

model User {
  id             String       @id @default(cuid())
  name           String
  about          String
  email          String       @unique
  password       String
  country        String
  streetAddress  String
  city           String
  state          String
  image          String
  dob            DateTime
  gender         Gender
  departmentId   Int?
  department     Department?  @relation(fields: [departmentId], references: [id])
  roleId         Int?
  role           Role?        @relation(fields: [roleId], references: [id])
  organizationId Int
  organization   Organization @relation(fields: [organizationId], references: [id])
  Invitation     Invitation[]
  createdAt      DateTime     @default(now())
}

model Invitation {
  id              String        @id @default(cuid())
  email           String
  role            String
  organizationId  Int?
  organization    Organization? @relation(fields: [organizationId], references: [id])
  invitedByUserId String
  invitedByUser   User          @relation(fields: [invitedByUserId], references: [id])
  used            Boolean       @default(false)
  createdAt       DateTime      @default(now())
}

enum Gender {
  male
  female
}

// Invited User's Email address
// Invited Users' Role
// Who Invited them
// When they were invited
