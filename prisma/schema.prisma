// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Department {
  id    Int    @id @default(autoincrement())
  name  String
  users User[]
}

model Role {
  id   Int    @id @default(autoincrement())
  name String
  User User[]
}

model Organization {
  id         Int          @id @default(autoincrement())
  name       String
  address    String
  Users      User[]
  Invitation Invitation[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id             String        @id @default(cuid())
  name           String?
  about          String?
  email          String?       @unique
  password       String?
  country        String?
  streetAddress  String?
  city           String?
  state          String?
  emailVerified  DateTime?
  image          String?
  address        String?
  dob            DateTime?
  gender         Gender?
  departmentId   Int?
  department     Department?   @relation(fields: [departmentId], references: [id])
  roleId         Int?
  role           Role?         @relation(fields: [roleId], references: [id])
  organizationId Int?
  organization   Organization? @relation(fields: [organizationId], references: [id])
  accounts       Account[]
  Invitation     Invitation[]
}

model Invitation {
  id              String        @id @default(cuid())
  email           String
  role            String
  organizationId  Int?
  organization    Organization? @relation(fields: [organizationId], references: [id])
  invitedByUserId String
  invitedByUser   User          @relation(fields: [invitedByUserId], references: [id])
}

enum Gender {
  male
  female
}
